<Components.page_panel title="Regex Tester" id="regex-tester">
  <:call_to_action>
    <button
      phx-click="permalink"
      disabled={@record.id && !changed?(@form)}
      type="button"
      class={[
        "relative inline-flex items-center px-4 py-2 font-medium text-white bg-brand-600 border transition ease-in-out duration-150 border-transparent leading-5 rounded-md hover:bg-brand-500 focus:outline-none focus:shadow-outline-brand focus:border-brand-700 active:bg-brand-700",
        if(@record.id && !changed?(@form), do: "opacity-50 cursor-not-allowed")
      ]}
    >
      <Icon.link class="w-4 h-5 mr-2 fill-current" />
      {if @record.id && !changed?(@form), do: "Saved", else: "Permalink"}
    </button>
  </:call_to_action>

  <:content>
    <div id="regex-tester-content">
      <.form for={@form} phx-change="validate">
        <div class="mt-6 grid grid-cols-1 row-gap-6 col-gap-4 sm:grid-cols-6">
          <div class="sm:col-span-5">
            <.label for={@form[:regex]} class="block text-sm font-medium leading-5 dark:text-gray-300 text-gray-700">Regex</.label>
            <div class="relative mt-1 mr-2 rounded-md shadow-sm">
              <div class="absolute inset-y-0 left-0 flex items-center pl-3 pr-3 font-normal tracking-widest text-gray-500 pointer-events-none">
                ~r/
              </div>
              <.input type="text" field={@form[:regex]} autofocus={true} placeholder="regex" autocomplete="off" class="shadow-sm focus:ring-brand-500 focus:border-brand-500 block w-full sm:text-sm dark:border-gray-700 border-gray-300 rounded-md pr-8 pl-10 font-mono sm:leading-5" />
              <div class="absolute inset-y-0 flex items-center pl-3 font-normal leading-normal text-gray-500 pointer-events-none right-4">
                /
              </div>
            </div>
            <Components.errors form={@form} field={:regex} />
            <p class="p-1 font-mono text-xs dark:text-gray-300 text-gray-700">
              For example:
              <%= if @form[:function].value == "named_captures" do %>
                <code class="select-all">
                  \A(?&lt;sign&gt;-)?(?&lt;seconds&gt;\d&lbrace;10,11&rbrace;)(?:\.(?&lt;subseconds&gt;\d&lbrace;1,10&rbrace;))?\z
                </code>
              <% else %>
                <code class="select-all">\A[a-z0-9-]+\z</code>
              <% end %>
            </p>
          </div>

          <div class="sm:col-span-1">
            <.label for={@form[:flags]} class="block text-sm font-medium leading-5 dark:text-gray-300 text-gray-700">Flags</.label>
            <div class="relative mt-1 rounded-md shadow-sm">
              <.input type="text" field={@form[:flags]} placeholder="flags" phx-hook="MaskFlags" autocomplete="off" class="shadow-sm focus:ring-brand-500 focus:border-brand-500 block w-full sm:text-sm dark:border-gray-700 border-gray-300 rounded-md font-mono sm:leading-5" />
            </div>
            <Components.errors form={@form} field={:flags} />
            <p class="p-1 font-mono text-xs dark:text-gray-300 text-gray-700">
              U f i m s u x
            </p>
          </div>

          <div class="sm:col-span-6">
            <.label for={@form[:string]} class="block text-sm font-medium leading-5 dark:text-gray-300 text-gray-700">String</.label>
            <div class="mt-1 rounded-md shadow-sm">
              <.input field={@form[:string]} type="textarea" spellcheck="false" rows={6} class="shadow-sm focus:ring-brand-500 focus:border-brand-500 w-full sm:text-sm dark:border-gray-700 border-gray-300 rounded-md font-mono block w-full sm:leading-5" />
            </div>
            <Components.errors form={@form} field={:string} />
          </div>
        </div>

        <div class="w-full my-2 rounded">
          <fieldset class="mt-6">
            <legend class="text-sm font-medium dark:text-gray-300 text-gray-700 leading-5">
              Function
              <button type="button" class="inline-block dark:text-gray-900 px-1 bg-gray-300 rounded" id="clipboard-pasta" phx-hook="ClipboardCopy" data-target="regex-pasta">
                Copy
              </button>
            </legend>
            <div class="w-full my-2 font-mono">
              <input type="text" readonly id="regex-pasta" class="cursor-default shadow-sm focus:ring-brand-500 focus:border-brand-500 w-full sm:text-sm dark:border-gray-700 border-gray-300 rounded-md font-mono block w-full" value={@pasta} />
            </div>
            <p class="text-sm text-gray-500 leading-5">
              Which
              <a class="link" href="https://hexdocs.pm/elixir/Regex.html" target="_blank">
                Regex function
              </a>
              to run
            </p>
            <div class="flex flex-wrap mt-1 space-x-8">
              <div class="flex items-center">
                <input
                  type="radio"
                  id={@form[:function].id <> "_run"}
                  name={@form[:function].name}
                  value="run"
                  checked={@form[:function].value == "run"}
                  class="dark:border-gray-700 border-gray-300 rounded-md focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 h-4 w-4 text-brand-600 transition duration-150 ease-in-out"
                />
                <label field="regex_live_function_run" class="ml-2">
                  <span class="text-sm font-medium dark:text-gray-300 text-gray-700 leading-5">
                    Run
                  </span>
                </label>
              </div>
              <div class="flex items-center">
                <input
                  type="radio"
                  id={@form[:function].id <> "_named_captures"}
                  name={@form[:function].name}
                  value="named_captures"
                  checked={@form[:function].value == "named_captures"}
                  class="dark:border-gray-700 border-gray-300 rounded-md focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 h-4 w-4 text-brand-600 transition duration-150 ease-in-out"
                />
                <label field="regex_live_function_named_captures" class="ml-2">
                  <span class="text-sm font-medium dark:text-gray-300 text-gray-700 leading-5">
                    Named Captures
                  </span>
                </label>
              </div>
              <div class="flex items-center">
                <input
                  type="radio"
                  id={@form[:function].id <> "_scan"}
                  name={@form[:function].name}
                  value="scan"
                  checked={@form[:function].value == "scan"}
                  class="dark:border-gray-700 border-gray-300 rounded-md focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 h-4 w-4 text-brand-600 transition duration-150 ease-in-out"
                />
                <label for="regex_live_function_scan" class="ml-2">
                  <span class="text-sm font-medium dark:text-gray-300 text-gray-700 leading-5">
                    Scan
                  </span>
                </label>
              </div>
            </div>
          </fieldset>
        </div>

        <p class="block mt-5 text-sm font-medium dark:text-gray-300 text-gray-700 leading-5">
          Result
        </p>
        <div class="w-full p-2 my-2 font-mono dark:bg-gray-700 bg-gray-200 rounded">
          <pre class="whitespace-pre-line select-all">
            result = <%= inspect(
@result,
limit: :infinity,
pretty: true
) %>
          </pre>
        </div>

        <p class="block mt-5 text-sm font-medium dark:text-gray-300 text-gray-700 leading-5">
          Visualization
        </p>
        <div class="w-full p-2 my-2 font-mono dark:bg-gray-700 bg-gray-200 rounded">
          <pre class="overflow-x-auto matches"><.span_match :for={{type, string} <- @matched} type={type} string={string} /></pre>
        </div>
      </.form>
    </div>
    <div class="mt-2">
      <div class="sm:hidden">
        <Components.tab_select group="help" title="Help">
          <option value="cheatsheet" selected="">Cheatsheet</option>
          <option value="flags">Flags</option>
          <option value="recipes">Recipes</option>
        </Components.tab_select>
      </div>
      <div class="hidden sm:block">
        <div class="border-b dark:border-gray-500 border-gray-200">
          <nav class="flex -mb-px">
            <Components.tab_button group="help" active="true" id="cheatsheet" target="cheatsheet">Cheatsheet</Components.tab_button>
            <Components.tab_button group="help" id="flags" target="flags">Flags</Components.tab_button>
            <Components.tab_button group="help" id="recipes" target="recipes">Recipes</Components.tab_button>
          </nav>
        </div>
      </div>

      <Components.tab group="help" id="cheatsheet" class="p-4" active="true">
        <dl class="flex flex-wrap -mx-2 text-sm">
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>[abc]</code></dt>
            <dd>A single character of: a, b, or c</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>[^abc]</code></dt>
            <dd>Any single character except: a, b, or c</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>[a-z]</code></dt>
            <dd>Any single character in the range a-z</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>[a-zA-Z]</code></dt>
            <dd>Any single character in the range a-z or A-Z</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>^</code></dt>
            <dd>Start of line</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>$</code></dt>
            <dd>End of line</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>\A</code></dt>
            <dd>Start of string</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>\z</code></dt>
            <dd>End of string</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>.</code></dt>
            <dd>Any single character</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>\s</code></dt>
            <dd>Any whitespace character</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>\S</code></dt>
            <dd>Any non-whitespace character</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>\d</code></dt>
            <dd>Any digit</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>\D</code></dt>
            <dd>Any non-digit</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>\w</code></dt>
            <dd>Any word character (letter, number, underscore)</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>\W</code></dt>
            <dd>Any non-word character</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>\b</code></dt>
            <dd>Any word boundary</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>(...)</code></dt>
            <dd>Capture everything enclosed</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>(a|b)</code></dt>
            <dd>a or b</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>a?</code></dt>
            <dd>Zero or one of a</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>a*</code></dt>
            <dd>Zero or more of a</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>a+</code></dt>
            <dd>One or more of a</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>a&lbrace;3&rbrace;</code></dt>
            <dd>Exactly 3 of a</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>a&lbrace;3,&rbrace;</code></dt>
            <dd>3 or more of a</dd>
          </div>
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold select-all"><code>a&lbrace;3,6&rbrace;</code></dt>
            <dd>Between 3 and 6 of a</dd>
          </div>
        </dl>
      </Components.tab>

      <Components.tab group="help" id="flags" class="p-4">
        <dl class="flex flex-wrap -mx-2 text-sm">
          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold">
              unicode (<code>u</code>)
            </dt>
            <dd>
              enables Unicode specific patterns like <code>\p</code> and change modifiers like <code>\w</code>, <code>\W</code>, <code>\s</code> and friends to also match on Unicode. It expects valid Unicode strings to be given on match
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold">
              caseless (<code>i</code>)
            </dt>
            <dd>
              adds case insensitivity
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold">
              dotall (<code>s</code>)
            </dt>
            <dd>
              causes dot to match newlines and also set newline to anycrlf; the new line setting can be overridden by setting (*CR) or (*LF) or (*CRLF) or (*ANY) according to <a class="link" href="https://erlang.org/doc/man/re.html" target="_BLANK"><code>:re documentation</code></a>
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold">
              multiline (<code>m</code>)
            </dt>
            <dd>
              causes <code>^</code> and <code>$</code> to mark the beginning and end of each line; use <code>\A</code> and <code>\z</code> to match the end or beginning of the string
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold">
              extended (<code>x</code>)
            </dt>
            <dd>
              whitespace characters are ignored except when escaped and allow <code>#</code> to delimit comments
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold">
              firstline (<code>f</code>)
            </dt>
            <dd>
              forces the unanchored pattern to match before or at the first newline, though the matched text may continue over the newline
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/3">
            <dt class="font-semibold">
              ungreedy (<code>U</code>)
            </dt>
            <dd>
              inverts the "greediness" of the regexp (the previous <code>r</code> option is deprecated in favor of <code>U</code>)
            </dd>
          </div>
        </dl>
      </Components.tab>
      <Components.tab group="help" id="recipes" class="p-4">
        <dl class="flex flex-wrap -mx-2 text-sm">
          <div class="w-full p-2 md:w-1/2">
            <dt class="font-semibold">
              US Phone Number
            </dt>
            <dd>
              <code class="select-all">
                \(?\d{3}\)?-? *\d{3}-? *-?\d{4}
              </code>
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/2">
            <dt class="font-semibold">
              Unix Epoch Time (named captures)
            </dt>
            <dd>
              <code class="select-all">
                \A(?&lt;sign&gt;-)?(?&lt;seconds&gt;\d&lbrace;10,11&rbrace;)(?:\.(?&lt;subseconds&gt;\d&lbrace;1,10&rbrace;))?\z
              </code>
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/2">
            <dt class="font-semibold">
              Entire string is only numbers
            </dt>
            <dd>
              <code class="select-all">
                \A[0-9]*\z
              </code>
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/2">
            <dt class="font-semibold">
              HTML attribute (eg: class)
            </dt>
            <dd>
              <code class="select-all">
                (?&lt;=class=(?:'|")).*?(?=(?:'|").*?&gt;)
              </code>
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/2">
            <dt class="font-semibold">
              Simple Email Address
            </dt>
            <dd>
              <code class="select-all">\A[^\s]+@[^\s]+\z</code>
            </dd>
          </div>

          <div class="w-full p-2 md:w-1/2">
            <dt class="font-semibold">
              Only alpha-numeric, underscore, and dash characters
            </dt>
            <dd>
              <code class="select-all">\A[\w-]+\z</code>
            </dd>
          </div>
        </dl>
      </Components.tab>
    </div>
  </:content>
</Components.page_panel>
